spring.application.name=Kanban-Board

fronted.app.port = 4200
app.environment = localhost

spring.datasource.url=jdbc:mysql://localhost:3306/shema2?connectionTimeZone=UTC&serverTimezone=UTC&useSSL=false
spring.datasource.username=root
spring.datasource.password=Cica1206!

# ===============================
# = JPA / HIBERNATE
# ===============================

# Prikazuj SQL upite koje JPA generise
spring.jpa.show-sql = true



# Hibernate ddl-auto: 
#   validate: validate the schema, makes no changes to the database.
#   update: update the schema.
#   create: creates the schema, destroying previous data.
#   create-drop: drop the schema at the end of the session.

spring.jpa.hibernate.ddl-auto = create

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

spring.jpa.properties.connection.CharSet=utf8
spring.jpa.properties.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true
server.port=3033
server.max-http-header-size=1MB
server.max_allowed_packet=1MB;
spring.servlet.multipart.max-request-size=1MB
server.max_allowed_packet=10MB

spring.devtools.restart.enabled=false

token.duration.in.hours = 2

springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
management.endpoints.web.exposure.include=mappings

# Enable GraphQL endpoint logging
# Enable detailed logs for GraphQL-related services
logging.level.org.springframework.graphql=DEBUG
logging.level.com.graphql=DEBUG

spring.graphql.schema.printer.enabled=true
spring.graphql.path=/graphql

# Enable GraphQL schema printing
spring.graphql.schema.printer.enabled=true
spring.graphql.schema-location=classpath:graphql/schema.graphqls
logging.level.org.springframework.graphql=DEBUG

logging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.web.socket.sockjs=DEBUG
logging.level.org.springframework.messaging.simp=DEBUG

requests.max.requests.in.one.minute = 60






